---
import Layout from '@layouts/Layout.astro'
import { firebase } from '../firebase/config'
import Container from '@components/Container.astro'
import Header from '@components/Header.astro'

import ArticleLogin from '@components/ArticleLogin.astro'
import Footer from '@components/Footer.astro'
import ArchiveExplorer from '@assets/icons/RecursesExplorer.astro'
import { events } from '../lib/events'
import SearchInput from '@assets/icons/SearchInput.astro'
import Pagination from '@components/Login/Pagination.astro'
import { actions } from 'astro:actions'

const firebaseUser = firebase.auth.currentUser

if (firebaseUser === null) {
  return Astro.redirect('/inicioSesion')
}

await firebaseUser.reload()

const { displayName } = firebaseUser
const name = displayName ?? 'Anonimo'

const searchParams = Astro.url.searchParams
const page = Number(searchParams.get('page') ?? 1)
const search = searchParams.get('search') ?? undefined

const { data, error } = await Astro.callAction(actions.getCourseByPage, {
  page,
  search
})

if (error) {
  // Handle error appropriately
  console.error(error)
  return Astro.redirect('/')
}

const { courses: coursesData, totalPage } = data
---

<Layout title="Login Estudiante">
  <Container>
    <Header />
    <h1 class="text-4xl text-white mt-5 mb-2 mx-10 md:mx-0">
      ¡Bienvenido, {name.split(' ')[0]}!
    </h1>
    <div class="flex justify-center items-center">
      <div class="flex justify-between items-center py-4">
        <div class="flex justify-between items-center gap-5">
          <form method="GET" action="/loginEstudiante" role="search">
            <div class="flex">
              <SearchInput class="ml-1" />
              <input
                type="text"
                id="buscador"
                name="search"
                placeholder="Busca cursos por título..."
                value={search}
                autocomplete="off"
              />
              <button type="submit">Buscar</button>
            </div>
          </form>
        </div>
      </div>
    </div>
    <main class="flex flex-col md:flex-row flex-1 justify-between gap-5 mb-6">
      <div class="flex flex-col">
        <h2 class="text-2xl text-white my-5 mx-10 md:mx-0">Mis Cursos</h2>
        <section class="mx-10 md:mx-0" id="list-courses">
          {
            coursesData.length > 0 ? (
              coursesData.map((item) => <ArticleLogin {...item} />)
            ) : (
              <p class="text-white text-center my-5 mx-10 md:mx-0 text-xl">
                No se encontraron cursos.
              </p>
            )
          }
        </section>
        <Pagination totalPages={totalPage} search={search} />
      </div>
      <aside class="w-[400px] mx-auto">
        <div class="flex flex-col">
          <h2 class="text-2xl text-white my-5 mx-10 md:mx-0">
            Recursos Educativos
          </h2>
          <div
            class="flex justify-center items-center gap-2 bg-[#040d1c] text-white rounded-xl px-6 py-4"
          >
            <ArchiveExplorer class="size-10" />
            <a href="/recursos" class="text-white">
              <span>Explorar todos los recursos</span>
            </a>
          </div>
        </div>
        <div class="flex flex-col">
          <h2 class="text-2xl text-white my-5 mx-10 md:mx-0">
            Información Importante
          </h2>
          <div class="flex flex-col gap-2 w-full">
            {
              events.map((item) => {
                return (
                  <div class="flex justify-between items-center gap-2 bg-[#040d1c] text-white rounded-xl px-6 py-4">
                    <div />
                    <div>
                      <h2 class="mb-2 font-bold">{item.title}</h2>
                      <p class="text-xs text-[#cdd7f7]">
                        {item.description} - <span>{item.date}</span>
                      </p>
                    </div>
                  </div>
                )
              })
            }
          </div>
        </div>
        <div class="flex flex-col">
          <h2 class="text-2xl text-white my-5 mx-10 md:mx-0">
            Configuraciones
          </h2>
          <div
            class="text-[15px] flex flex-col gap-5 justify-between bg-[#040d1c] text-white rounded-xl px-6 py-4"
          >
            <a href="/">Preferencias de Notificaciones</a>
            <a href="/"> Configuraciones </a>
            <button type="button" id="logout"> Cerrar sesión </button>
          </div>
        </div>
      </aside>
    </main>
  </Container>

  <Footer />
</Layout>

<style>
  .hidden {
    display: none;
  }
  button {
    padding: 5px 12px;
    border-radius: 0.5rem;
    background-color: #64748b;
    color: white;
    font-weight: 400;
    border: none;
    outline: none;
    cursor: pointer;
    transition: all 0.2s;
    font-size: 1rem;

    &:hover, /* pseudo-clase que significa que el ratón está encima */
    &:focus {
      /* pseudo-clase que significa que el elemento tiene el foco */
      background-color: var(--primary-hover);
      outline: 2px solid white;
    }

    &:active {
      transform: scale(0.9);
    }

    &:disabled {
      opacity: 0.5;
      pointer-events: none;
    }
  }
  section {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    gap: 20px;
  }

  a:empty {
    opacity: 0;
  }

  div > a:not(p ~ :last-child),
  ul li a {
    display: block;
    color: white;
    transform: translateY(0);
    transition: all 0.2s ease-in-out;
    &:hover {
      text-shadow: 0 0 0 white;
      transform: 0;
    }
  }

  /* Formulario de Búsqueda */
  form {
    width: 550px;
    margin: 0 auto;
    padding-inline: 16px;
  }

  form > div {
    display: flex;
    align-items: center;
    border-radius: 0.5rem;
    box-shadow: 0 2px 5px 1px #64748b;
    padding: 2px 10px;
    gap: 0.5rem;
  }

  form input[type='text'] {
    flex: 1;
    background: transparent;
    border: none;
    outline: none;
    color: var(--text-primary);
    padding: 0.75rem 0.5rem;
    font-size: 1rem;
    font-family: inherit;
  }

  form input[type='text']::placeholder {
    color: #64748b;
  }

  button[type='button'] {
    background-color: #ff0000;
  }
</style>

<script>
  import { actions } from 'astro:actions'

  document.addEventListener('astro:page-load', () => {
    const logout = document.getElementById('logout') as HTMLButtonElement
    logout.addEventListener('click', () => {
      actions.logout()
      window.location.href = '/'
    })
  })
</script>
